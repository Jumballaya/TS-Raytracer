{"mappings":"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","sources":["./src/raytracer/math/Vector.ts","./src/raytracer/core/Color.ts","./src/raytracer/math/Matrix.ts","./src/raytracer/core/Camera.ts","./src/raytracer/lights/LightType.ts","./node_modules/base64-js/index.js","./node_modules/ieee754/index.js","./node_modules/buffer/index.js","./src/raytracer/core/Canvas.ts","./src/raytracer/core/Renderer.ts","./src/raytracer/core/renderers/BrowserRenderer.ts","./src/raytracer/core/renderers/NodeRenderer.ts","./src/raytracer/math/Ray.ts","./src/raytracer/core/Scene.ts","./src/raytracer/lights/Light.ts","./src/raytracer/objects/RenderableObjectType.ts","./src/raytracer/objects/Sphere.ts","./src/raytracer/objects/RenderableObject.ts","./src/tracescript/lexer/TokenType.ts","./src/tracescript/lexer/Lexer.ts","./src/tracescript/parser/Parser.ts","./src/tracescript/assembler/Assembler.ts","./src/index.ts"],"sourcesContent":["\nexport class Vector {\n\n    protected values: [number, number, number] = [0, 0, 0];\n\n    constructor(\n        v1 = 0,\n        v2 = 0,\n        v3 = 0,\n    ) {\n        this.values = [v1, v2, v3];\n    }\n\n    public getValues(): [number, number, number] {\n        return this.values;\n    }\n\n    public magnitude() {\n        const [v1, v2, v3] = this.values;\n        if (v1 === 0 && v2 === 0 && v3 === 0) {\n            return 0;\n        }\n        return Math.sqrt((v1 * v1) + (v2 * v2) + (v3 * v3));\n    }\n\n    public dot(v: Vector): number {\n        const [_v1, _v2, _v3] = this.values;\n        const [v1, v2, v3] = v.getValues();\n        return (_v1 * v1) + (_v2 * v2) + (_v3 * v3);\n    }\n\n    public multiplyScalar(scalar: number): Vector {\n        const { values } = this;\n        const [v1, v2, v3] = values;\n        const _v1 = v1 * scalar;\n        const _v2 = v2 * scalar;\n        const _v3 = v3 * scalar;\n        return new Vector(_v1, _v2, _v3);\n    }\n\n    public divideScalar(scalar: number): Vector {\n        return this.multiplyScalar(1.0 / scalar);\n    }\n\n    public addVector(v: Vector): Vector {\n        const [_v1, _v2, _v3] = this.values;\n        const [v1, v2, v3] = v.getValues();\n        return new Vector(\n            _v1 + v1,\n            _v2 + v2,\n            _v3 + v3,\n        );\n    }\n\n    public minusVector(v: Vector): Vector {\n        const [_v1, _v2, _v3] = this.values;\n        const [v1, v2, v3] = v.getValues();\n        return new Vector(\n            _v1 - v1,\n            _v2 - v2,\n            _v3 - v3,\n        );\n    }\n\n    public plusEquals(v: Vector): void {\n        const [_v1, _v2, _v3] = this.values;\n        const [v1, v2, v3] = v.getValues();\n        this.values = [_v1 + v1, _v2 + v2, _v3 + v3];\n    }\n}","import { Vector } from \"../math/Vector\";\n\nexport class Color extends Vector {\n    public value: number;\n\n    constructor(\n        red = 0,\n        green = 0,\n        blue = 0,\n    ) {\n        super(red, green, blue);\n        this.value = (red << 16) | (green << 8) | (blue);\n    }\n\n    public fromValue(value: number) {\n        const [r, g, b] = this.converValue(value);\n        return new Color(this.clamp(r), this.clamp(g), this.clamp(b));\n    }\n\n    public fromVector(v: Vector) {\n        const [r, g, b] = v.getValues();\n        return new Color(this.clamp(r), this.clamp(g), this.clamp(b));\n    }\n\n    public multiplyScalar(scalar: number) {\n        const v = super.multiplyScalar(scalar);\n        return new Color().fromVector(v);\n    }\n\n    public multiplyVector(v: Vector) {\n        const [r, g, b] = v.getValues();\n        const [_r, _g, _b] = this.values;\n        const blend = new Vector(\n            r * _r,\n            g * _g,\n            b * _b,\n        );\n        return new Color().fromVector(blend);\n    }\n\n    public addVector(_v: Vector) {\n        const v = super.addVector(_v);\n        return new Color().fromVector(v);\n    }\n\n    public addColor(color: Color) {\n        return this.addVector(color);\n    }\n\n    public minusVector(_v: Vector) {\n        const v = super.minusVector(_v);\n        return new Color().fromVector(v);\n    }\n\n    public minusColor(color: Color) {\n        return this.minusVector(color);\n    }\n\n    private converValue(value: number): [number, number, number] {\n        const r = (value >> 16) & 0xff;\n        const g = (value >> 8) & 0xff;\n        const b = value & 0xff;\n        return [r, g, b];\n    }\n\n    private clamp(color: number) {\n        if (color <= 0) return 0;\n        if (color >= 255) return 255;\n        return color;\n    }\n\n}","import { Vector } from \"./Vector\";\n\ntype MatrixConstructor = [\n    number, number, number,\n    number, number, number,\n    number, number, number,\n];\n\nexport class Matrix {\n    private rows: [Vector, Vector, Vector];\n\n    constructor(private values: MatrixConstructor) {\n        this.rows = [\n            new Vector(values[0], values[1], values[2]),\n            new Vector(values[3], values[4], values[5]),\n            new Vector(values[6], values[7], values[8]),\n        ];\n    }\n\n    public getRow(i: number): Vector {\n        if (i <= 2 && i >= 0) {\n            return this.rows[i];\n        }\n        return this.rows[2];\n    }\n\n    public getAt(x: number, y: number): number {\n        const index = (y * 3) + x;\n        if (index >= 0 && index <= 8) {\n            return this.values[index];\n        }\n        return this.values[8];\n    }\n\n    public multiplyMatrix(n: Matrix): Matrix {\n        const m = this;\n        const values: MatrixConstructor = [\n            (m.getAt(0, 0) * n.getAt(0, 0)) + (m.getAt(0, 1) * n.getAt(1, 0)) + (m.getAt(0, 2) * n.getAt(2, 0)),\n            (m.getAt(0, 0) * n.getAt(0, 1)) + (m.getAt(0, 1) * n.getAt(1, 1)) + (m.getAt(0, 2) * n.getAt(2, 1)),\n            (m.getAt(0, 0) * n.getAt(0, 2)) + (m.getAt(0, 1) * n.getAt(1, 2)) + (m.getAt(0, 2) * n.getAt(2, 2)),\n\n            (m.getAt(1, 0) * n.getAt(0, 0)) + (m.getAt(1, 1) * n.getAt(1, 0)) + (m.getAt(1, 2) * n.getAt(2, 0)),\n            (m.getAt(1, 0) * n.getAt(0, 1)) + (m.getAt(1, 1) * n.getAt(1, 1)) + (m.getAt(1, 2) * n.getAt(2, 1)),\n            (m.getAt(1, 0) * n.getAt(0, 2)) + (m.getAt(1, 1) * n.getAt(1, 2)) + (m.getAt(1, 2) * n.getAt(2, 2)),\n\n            (m.getAt(2, 0) * n.getAt(0, 0)) + (m.getAt(2, 1) * n.getAt(1, 0)) + (m.getAt(2, 2) * n.getAt(2, 0)),\n            (m.getAt(2, 0) * n.getAt(0, 1)) + (m.getAt(2, 1) * n.getAt(1, 1)) + (m.getAt(2, 2) * n.getAt(2, 1)),\n            (m.getAt(2, 0) * n.getAt(0, 2)) + (m.getAt(2, 1) * n.getAt(1, 2)) + (m.getAt(2, 2) * n.getAt(2, 2)),\n        ];\n        return new Matrix(values);\n    }\n\n    public multiplyVector(v: Vector): Vector {\n        const m = this;\n        const [x, y, z] = v.getValues();\n        return new Vector(\n            (m.getAt(0, 0) * x) + (m.getAt(0, 1) * y) + (m.getAt(0, 2) * z),\n            (m.getAt(1, 0) * x) + (m.getAt(1, 1) * y) + (m.getAt(1, 2) * z),\n            (m.getAt(2, 0) * x) + (m.getAt(2, 1) * y) + (m.getAt(2, 2) * z),\n        );\n    }\n\n    public rotateX(r: number): Matrix {\n        const c = Math.cos(r);\n        const s = Math.sin(r);\n        const values: MatrixConstructor = [\n            1, 0, 0,\n            0, c, -s,\n            0, s, c,\n        ];\n        return new Matrix(values);\n    }\n\n    public rotateY(r: number): Matrix {\n        const c = Math.cos(r);\n        const s = Math.sin(r);\n        const values: MatrixConstructor = [\n            c, 0, s,\n            0, 1, 0,\n            -s, 0, c,\n        ];\n        return new Matrix(values);\n    }\n\n    public rotateZ(r: number): Matrix {\n        const c = Math.cos(r);\n        const s = Math.sin(r);\n        const values: MatrixConstructor = [\n            c, -s, 0,\n            s, c, 0,\n            0, 0, 1,\n        ];\n        return new Matrix(values);\n    }\n}","import { Matrix } from \"../math/Matrix\";\nimport { Vector } from \"../math/Vector\";\n\ninterface CameraViewport {\n    dimensions: [number, number];\n    distance: number;\n}\n\nexport class Camera {\n    public position: Vector = new Vector(0, 0, 0);\n    public viewport: CameraViewport = {\n        dimensions: [1, 1],\n        distance: 1,\n    };\n    public rotation: Matrix = new Matrix([\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1,\n    ]);\n\n    constructor(dimensions: [number, number] = [1, 1], distance = 1) {\n        this.viewport.dimensions = dimensions;\n        this.viewport.distance = distance;\n    }\n\n    public rotate(r: Vector) {\n        const [rX, rY, rZ] = r.getValues();\n        const rotX = this.rotation.rotateX(rX)\n        const rotY = this.rotation.rotateY(rY);\n        const rotZ = this.rotation.rotateZ(rZ);\n        this.rotation = rotX.multiplyMatrix(rotY).multiplyMatrix(rotZ);\n    }\n}","\nexport enum LightType {\n    None = 'None',\n    Ambient = 'Ambient',\n    Point = 'Point',\n    Directional = 'Directional',\n}","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","import { Color } from \"./Color\";\n\nexport class Canvas {\n    private pixels: Color[];\n\n    constructor(\n        private width: number,\n        private height: number,\n    ) {\n        this.pixels = Array.from(new Array(this.height * this.width), () => new Color(255, 255, 255));\n    }\n\n    public putPixel(_x: number, _y: number, color: Color) {\n        const { height, width } = this;\n        const x = (width / 2) + _x;\n        const y = (height / 2) - _y;\n        const index = x + (y * width);\n        this.pixels[index] = color;\n        return;\n    }\n\n    public setDimensions(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n        this.pixels = Array.from(new Array(this.height * this.width), () => new Color(255, 255, 255));\n    }\n\n    public data() {\n        return this.pixels;\n    }\n}","import { Canvas } from \"./Canvas\";\nimport { Color } from \"./Color\";\n\nexport class Renderer {\n\n    protected cvs: Canvas;\n\n    constructor(\n        protected width: number,\n        protected height: number,\n    ) {\n        this.cvs = new Canvas(width, height);\n    }\n\n    public draw() { }\n\n    public toPng(): Buffer {\n        return Buffer.from(new Array());\n    }\n\n    public putPixel(x: number, y: number, color: Color) {\n        this.cvs.putPixel(x, y, color);\n    }\n\n    public dimensions(): [number, number] {\n        return [this.width, this.height];\n    }\n\n    public setDimensions(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n        this.cvs.setDimensions(width, height);\n    }\n}","import { Renderer } from \"../Renderer\";\n\nexport class BrowserRenderer extends Renderer {\n    private $canvas: HTMLCanvasElement;\n    private ctx: CanvasRenderingContext2D;\n\n    constructor(\n        width: number,\n        height: number,\n    ) {\n        super(width, height);\n        this.$canvas = document.createElement('canvas');\n        this.$canvas.setAttribute('width', width.toString());\n        this.$canvas.setAttribute('height', height.toString());\n        this.ctx = this.$canvas.getContext('2d') as CanvasRenderingContext2D;\n        console.log('BrowserRenderer Initialized');\n    }\n\n    public setDimensions(width: number, height: number) {\n        super.setDimensions(width, height);\n        this.$canvas.setAttribute('width', width.toString());\n        this.$canvas.setAttribute('height', height.toString());\n        this.cvs.setDimensions(width, height);\n    }\n\n    public setParent(parent: HTMLElement) {\n        parent.appendChild(this.$canvas);\n    }\n\n    public draw() {\n        const { width, height } = this;\n        const screenData = this.cvs.data();\n        const imageData = this.ctx.getImageData(0, 0, width, height);\n        for (let i = 0; i < imageData.data.length; i += 4) {\n            const color = screenData[i / 4];\n            const [red, green, blue] = color.getValues();\n            imageData.data[i] = red;\n            imageData.data[i + 1] = green;\n            imageData.data[i + 2] = blue;\n            imageData.data[i + 3] = 255;\n        }\n        requestAnimationFrame(() => {\n            this.ctx.putImageData(imageData, -1, -1);\n        });\n    }\n\n    public toPng(): Buffer {\n        const str = this.$canvas.toDataURL('image/png');\n        const base64Data = str.split('data:image/png;base64,')[1];\n        return Buffer.from(base64Data, 'base64');\n    }\n}","import { Renderer } from \"../Renderer\";\n\nexport class NodeRenderer extends Renderer {\n\n    public imageData: Buffer = Buffer.alloc(0);\n\n    constructor(width: number, height: number) {\n        super(width, height);\n        console.log('NodeRenderer Initialized');\n    }\n\n    public draw() {\n        const { width, height } = this;\n        const screenData = this.cvs.data();\n        this.imageData = Buffer.alloc(width * height * 4);\n        for (let i = 0; i < this.imageData.length; i += 4) {\n            const color = screenData[i / 4];\n            const [red, green, blue] = color.getValues();\n            this.imageData[i] = red;\n            this.imageData[i + 1] = green;\n            this.imageData[i + 2] = blue;\n            this.imageData[i + 3] = 255;\n        }\n    }\n\n    public toPng() {\n        return this.imageData;\n    }\n}","import { Vector } from \"./Vector\";\n\nexport class Ray {\n\n    public direction: Vector;\n\n    constructor(\n        public start: Vector,\n        private end: Vector,\n    ) {\n        this.direction = this.end.minusVector(start);\n    }\n\n    public pointAt(d: number): Vector {\n        return this.start.addVector(this.direction.multiplyScalar(d));\n    }\n\n    public reflect(): Vector {\n        const { start, end } = this;\n        return end.multiplyScalar(2).multiplyScalar(end.dot(start)).minusVector(start);\n    }\n\n}","import { Camera } from \"./Camera\";\nimport { Color } from \"./Color\";\nimport { Light } from \"../lights/Light\";\nimport { LightType } from \"../lights/LightType\";\nimport { RenderableObject } from \"../objects/RenderableObject\";\nimport { Vector } from \"../math/Vector\";\nimport { Renderer } from \"./Renderer\";\nimport { BrowserRenderer } from \"./renderers/BrowserRenderer\";\nimport { NodeRenderer } from \"./renderers/NodeRenderer\";\nimport { Ray } from \"../math/Ray\";\n\nconst WHITE = new Color(255, 255, 255);\nconst BLACK = new Color(0, 0, 0);\n\nexport class Scene {\n\n  private objects: RenderableObject[] = [];\n  private lights: Light[] = [];\n  private camera: Camera;\n  private renderer: Renderer;\n\n  constructor(private resolution: [number, number]) {\n    this.renderer = typeof window === 'undefined'\n      ? new NodeRenderer(resolution[0], resolution[1])\n      : new BrowserRenderer(resolution[0], resolution[1]);\n    const ratio = this.getRatio(resolution);\n    this.camera = new Camera(ratio, 1);\n  }\n\n  public render(reduceBy = 1) {\n    const [w, h] = this.resolution;\n    this.renderer.setDimensions(Math.floor(w / reduceBy), Math.floor(h / reduceBy));\n    const [cWidth, cHeight] = this.renderer.dimensions();\n    const [vWidth, vHeight] = this.camera.viewport.dimensions;\n    for (let cY = -(cHeight / 2); cY < (cHeight / 2); cY++) {\n      for (let cX = -(cWidth / 2); cX < (cWidth / 2); cX++) {\n        const vX = cX * (vWidth / cWidth);\n        const vY = cY * (vHeight / cHeight);\n        const { distance } = this.camera.viewport;\n        const origin = this.camera.position;\n        const viewport = this.camera.rotation.multiplyVector((new Vector(vX, vY, distance)));\n        const renderedColor = this.traceRay(origin, viewport, distance, Infinity, 100);\n        this.renderer.putPixel(cX, cY, renderedColor);\n      }\n    }\n  }\n\n  public rotateCamera(v: Vector) {\n    this.camera.rotate(v);\n  }\n\n  public moveCamera(v: Vector) {\n    this.camera.position = v;\n  }\n\n  public getSize() {\n    return this.renderer.dimensions();\n  }\n\n  public draw() {\n    this.renderer.draw();\n  }\n\n  public toPng() {\n    return this.renderer.toPng();\n  }\n\n  public setParent(parent: HTMLElement) {\n    if (this.renderer instanceof BrowserRenderer) {\n      this.renderer.setParent(parent);\n    }\n  }\n\n  public addObject(obj: RenderableObject): void {\n    this.objects.push(obj);\n  }\n\n  public addLight(light: Light): void {\n    this.lights.push(light);\n  }\n\n  private traceRay(origin: Vector, viewport: Vector, min: number, max: number, rDepth: number): Color {\n    const [hit, object] = this.getClosestHit(origin, viewport, min, max);\n    const inverseViewport = viewport.multiplyScalar(-1);\n\n    // No object hit, return background color\n    if (object == null) {\n      return BLACK;\n    }\n\n    // Lighting\n    const intersection = origin.addVector(viewport.multiplyScalar(hit));\n    const normal = object.getNormal(intersection);\n    const lighting = this.computeLighting(intersection, normal, inverseViewport, object.specular);\n    let color = object.color.multiplyVector(lighting);\n\n    // Reflection\n    const reflective = object.reflective;\n    if (rDepth > 0 && reflective > 0) {\n      const ray = new Ray(inverseViewport, normal);\n      const reflectedRay = ray.reflect();\n      const reflectedColor = this.traceRay(intersection, reflectedRay, 0.001, Infinity, rDepth - 1);\n      color = color.multiplyScalar(1 - reflective).addVector(reflectedColor.multiplyScalar(reflective));\n    }\n\n    // Transparency\n    const transparency = object.transparency;\n    if (rDepth > 0 && transparency > 0) {\n      const transparentColor = this.traceRay(origin, viewport, hit + 0.001, Infinity, rDepth - 1);\n      color = color.multiplyScalar(1 - transparency).addVector(transparentColor.multiplyScalar(transparency));\n    }\n\n    return color;\n  }\n\n  private getClosestHit(origin: Vector, viewport: Vector, min: number, max: number): [number, RenderableObject | null] {\n    let closestT = Infinity;\n    let closestObj: RenderableObject | null = null;\n    for (let obj of this.objects) {\n      const tangents = obj.intersect(origin, viewport);\n      for (let t of tangents) {\n        if (t >= min && t <= max && t < closestT) {\n          closestT = t;\n          closestObj = obj;\n        }\n      }\n    }\n    return [closestT, closestObj];\n  }\n\n  private computeLighting(intersection: Vector, normal: Vector, distance: Vector, specular: number): Vector {\n    const i = new Vector();\n    for (let light of this.lights) {\n\n      // Ambient Light\n      if (light.type === LightType.Ambient) {\n        i.plusEquals(light.intensity);\n        continue;\n      }\n\n      // Light direction\n      const lDirection = this.getLightDirection(intersection, light);\n\n      // Shadows\n      const tmax = light.type === LightType.Point ? 1 : Infinity;\n      const [_, shadowObj] = this.getClosestHit(intersection, lDirection, 0.001, tmax);\n      if (shadowObj !== null) {\n        continue;\n      }\n\n      // Diffuse Lighting\n      const diffuseLighting = this.calculateDiffuseLighting(lDirection, normal, light);\n      i.plusEquals(diffuseLighting)\n\n      // Specular Lighting\n      const specularLighting = this.calculateSpecularLighting(lDirection, normal, light, distance, specular);\n      i.plusEquals(specularLighting);\n    }\n    return i;\n  }\n\n  private getLightDirection(intersection: Vector, light: Light) {\n    let direction = new Vector();\n    // Point Light\n    if (light.type === LightType.Point) {\n      direction = light.position.minusVector(intersection);\n    }\n\n    // Directional Light\n    if (light.type === LightType.Directional) {\n      direction = light.direction;\n    }\n    return direction;\n  }\n\n  private calculateDiffuseLighting(direction: Vector, normal: Vector, light: Light) {\n    const nDotL = normal.dot(direction);\n    if (nDotL > 0) {\n      const lightMod = nDotL / (normal.magnitude() * direction.magnitude());\n      const lightLevel = light.intensity.multiplyScalar(lightMod);\n      return lightLevel;\n    }\n    return new Vector();\n  }\n\n  private calculateSpecularLighting(direction: Vector, normal: Vector, light: Light, distance: Vector, specular: number) {\n    if (specular !== -1) {\n      const reflected = normal.multiplyScalar(2).multiplyScalar(normal.dot(direction)).minusVector(direction);\n      const rDotDist = reflected.dot(distance);\n      if (rDotDist > 0) {\n        const lightMod = Math.pow(rDotDist / (reflected.magnitude() * distance.magnitude()), specular);\n        const lightLevel = light.intensity.multiplyScalar(lightMod);\n        return lightLevel;\n      }\n    }\n    return new Vector();\n  }\n\n  private getRatio(resolution: [number, number]): [number, number] {\n    const [width, height] = resolution;\n    return [width / height, 1];\n  }\n\n}","import { Vector } from \"../math/Vector\";\nimport { LightType } from \"./LightType\";\n\nexport class Light {\n\n    public direction: Vector = new Vector();\n    public position: Vector = new Vector();\n\n    constructor(\n        public type: LightType,\n        public intensity: Vector,\n        v = new Vector(),\n    ) {\n        if (type === LightType.Point) {\n            this.position = v;\n        }\n        if (type === LightType.Directional) {\n            this.direction === v;\n        }\n    }\n}","\nexport enum RenderableObjectType {\n    Empty = 'Empty',\n    Sphere = 'Sphere',\n    Box = 'Box',\n}","import { Color } from \"../core/Color\";\nimport { Vector } from \"../math/Vector\";\nimport { RenderableObject } from \"./RenderableObject\";\nimport { RenderableObjectType } from \"./RenderableObjectType\";\n\nexport class Sphere extends RenderableObject {\n    constructor(\n        center: Vector,\n        public radius: number,\n        color: Color,\n        specular = -1,\n        reflective = 0,\n        transparency = 0,\n    ) {\n        super(center, color, specular, reflective, transparency);\n        this.type = RenderableObjectType.Sphere;\n    }\n\n    public intersect(origin: Vector, viewport: Vector): number[] {\n        const { radius } = this;\n\n        const cO = origin.minusVector(this.center);\n        const a = viewport.dot(viewport);\n        const b = 2 * cO.dot(viewport);\n        const c = cO.dot(cO) - (radius * radius);\n\n        const discriminant = (b * b) - (4 * a * c);\n        if (discriminant < 0) {\n            return [Infinity, Infinity];\n        }\n\n        const t1 = (-b + Math.sqrt(discriminant)) / (2 * a);\n        const t2 = (-b - Math.sqrt(discriminant)) / (2 * a);\n        return [t1, t2];\n    }\n\n}","import { Color } from \"../core/Color\";\nimport { Vector } from \"../math/Vector\";\nimport { RenderableObjectType } from \"./RenderableObjectType\";\n\nexport class RenderableObject {\n\n  protected type: RenderableObjectType = RenderableObjectType.Empty;\n\n  constructor(\n    public center: Vector,\n    public color = new Color(),\n    public specular = -1,\n    public reflective = 0,\n    public transparency = 0,\n  ) { }\n\n  public intersect(origin: Vector, viewport: Vector): number[] {\n    return [Infinity, Infinity];\n  }\n\n  public moveTo(x: number, y: number, z: number) {\n    this.center = new Vector(x, y, z);\n  }\n\n  public getNormal(v: Vector): Vector {\n    const direction = v.minusVector(this.center);\n    return direction.divideScalar(direction.magnitude());\n  }\n\n}","\nexport enum TokenType {\n    Identifier = 'Identifier',\n\n    Number = 'Number',\n\n    At = 'At',\n    Comma = 'Comma',\n    Semicolon = 'Semicolon',\n    Colon = 'Colon',\n    DoubleColon = 'DoubleColon',\n\n    LCurlyBrace = 'LCurlyBrace',\n    RCurlyBrace = 'RCurlyBrace',\n\n    Error = 'Error',\n    End = 'End',\n\n    Start = 'Start',\n}","import { Token } from \"./Token\";\nimport { TokenType } from \"./TokenType\";\n\nconst newToken = (type: TokenType, value: string) => ({ type, value })\n\nconst newErrorToken = (value: string, line: number, column: number) => {\n    const message = `[Error] Line: ${line} | Column: ${column} | Value: ${value}`\n    return {\n        type: TokenType.Error,\n        value: message,\n    };\n}\n\nconst isFloat = (f: string) => {\n    if (!f) return false;\n    const re = new RegExp(/((\\d+)\\.(\\d+)|(\\d+))/g);\n    return !!f.match(re)\n}\n\nconst isNumber = (c: string): boolean => {\n    if (!c) return false;\n    const re = new RegExp(/([0-9]|\\.)/);\n    return !!c.match(re);\n}\n\nconst isAlpha = (c: string) => {\n    if (!c) return false;\n    const re = new RegExp(/[a-zA-Z]/);\n    return !!c.match(re);\n}\n\nconst isAlphaNumeric = (c: string) => {\n    if (!c) return false;\n    return isAlpha(c) || isNumber(c);\n};\n\nconst isIdentifier = (c: string) => {\n    if (!c) return false;\n    const re = new RegExp(/(\\_|\\$)/)\n    return isAlphaNumeric(c) || c.match(re);\n}\n\nconst isWhitespace = (c: string) => {\n    if (!c) return false;\n    const re = new RegExp(/(\\n|\\t)/);\n    return !!c.match(re) || c === ' ';\n}\n\nconst isNewLine = (c: string) => {\n    if (!c) return false;\n    const re = new RegExp(/\\n/);\n    return !!c.match(re);\n}\n\nexport class Lexer {\n\n    private tokens: Token[] = [];\n\n    private pos = 0;\n    private current: string = '';\n\n    private cursor = {\n        line: 1,\n        column: 0,\n    };\n\n    constructor(\n        private readonly input: string,\n    ) {\n        this.current = input[0];\n    }\n\n    public createTokens(): Token[] {\n        if (this.input.length < 1) {\n            return [newToken(TokenType.End, '\\0')];\n        }\n\n        while (this.pos < this.input.length) {\n            this.whitespace();\n            this.tokens.push(this.parse());\n        }\n\n        return this.tokens;\n    }\n\n    public nextToken(): Token {\n        this.whitespace();\n        return this.parse();\n    }\n\n    public getCursor(): [number, number] {\n        return [this.cursor.line, this.cursor.column];\n    }\n\n    private parse(): Token {\n        if (this.pos >= this.input.length) {\n            return newToken(TokenType.End, '\\0');\n        }\n        const cur = this.read();\n        switch (cur) {\n            case '@': {\n                return newToken(TokenType.At, cur);\n            }\n\n            case ',': {\n                return newToken(TokenType.Comma, cur);\n            }\n\n            case ';': {\n                return newToken(TokenType.Semicolon, cur);\n            }\n\n            case ':': {\n                if (this.current == ':') {\n                    const tkn = newToken(TokenType.DoubleColon, cur + this.current);\n                    this.read();\n                    return tkn;\n                }\n                return newToken(TokenType.Colon, cur);\n            }\n\n            case '{': {\n                return newToken(TokenType.LCurlyBrace, cur);\n            }\n\n            case '}': {\n                return newToken(TokenType.RCurlyBrace, cur);\n            }\n\n            case '-': {\n                if (isNumber(this.current)) {\n                    const num = isNumber(this.current) ? this.readNumber() : '';\n                    return newToken(TokenType.Number, cur + num);\n                }\n                return newErrorToken(cur, this.cursor.line, this.cursor.column);\n            }\n\n            default: {\n                if (isNumber(cur)) {\n                    const num = isNumber(this.current) ? this.readNumber() : '';\n                    const fullNum = cur + num;\n                    if (isFloat(fullNum)) {\n                        return newToken(TokenType.Number, cur + num);\n                    }\n                    return newErrorToken(fullNum, this.cursor.line, this.cursor.column);\n                } else if (isAlpha(cur)) {\n                    const ident = isIdentifier(this.current) ? this.readIdentifier() : '';\n                    return newToken(TokenType.Identifier, cur + ident);\n                }\n                return newErrorToken(cur, this.cursor.line, this.cursor.column);\n            }\n        }\n    }\n\n    private read(): string {\n        const cur = this.current;\n        this.pos++;\n        this.current = this.input[this.pos];\n        this.cursor.column++;\n        return cur;\n    }\n\n    private peak(): string {\n        const index = this.pos + 2 < this.input.length ? this.pos + 1 : this.pos;\n        return this.input[index];\n    }\n\n    private whitespace() {\n        while (isWhitespace(this.current)) {\n            if (isNewLine(this.current)) {\n                this.cursor.line++;\n                this.cursor.column = 0;\n            }\n            this.read();\n        }\n    }\n\n    private readNumber(): string {\n        let num = this.read();\n        if (!isNumber(this.current)) return num;\n        while (isNumber(this.current)) {\n            num += this.read();\n        }\n        return num;\n    }\n\n    private readIdentifier(): string {\n        let ident = this.read();\n        if (!isIdentifier(this.peak())) return ident;\n        while (isIdentifier(this.current)) {\n            ident += this.read();\n        }\n        return ident;\n    }\n}","import { Lexer } from \"../lexer/Lexer\";\nimport { Token } from \"../lexer/Token\";\nimport { TokenType } from \"../lexer/TokenType\";\nimport { MetaValue, ObjectValue, Tree, ObjectTypes, LightTypes, ObjectClassTypes, VectorValue } from \"./Types\";\n\nexport class Parser {\n    private lexer: Lexer;\n    private current: Token = { type: TokenType.Start, value: '' } as Token;\n\n    constructor(private input: string) {\n        this.lexer = new Lexer(input);\n    }\n\n    public parse() {\n        const tree: Tree = {\n            meta: [],\n            objects: [],\n            lights: [],\n        };\n        while (this.current.type !== TokenType.End) {\n            this.current = this.lexer.nextToken();\n            switch (this.current.type) {\n\n                // Parse Meta Statements\n                case TokenType.At: {\n                    tree.meta.push(this.parseMetaStatement());\n                    break;\n                }\n\n                // Parse Object or Light Statments\n                case TokenType.Identifier: {\n                    const obj = this.parseObjectStatement();\n                    if (obj.class === 'light') {\n                        tree.lights.push(obj as ObjectValue<'light'>);\n                    }\n                    if (obj.class === 'object') {\n                        tree.objects.push(obj as ObjectValue<'object'>);\n                    }\n                    break;\n                }\n\n                // Default\n                default: {\n                    // Add to Errors\n                    if (this.current.type === TokenType.End) {\n                        break;\n                    }\n                    const [line, col] = this.lexer.getCursor();\n                    throw new Error(`Line: ${line}, Column: ${col}. Syntax error - ${JSON.stringify(this.current)}`);\n                }\n            }\n        }\n        return tree;\n    }\n\n    private nextToken() {\n        this.current = this.lexer.nextToken();\n    }\n\n    private logError(expected: string, got: string) {\n        const [line, col] = this.lexer.getCursor();\n        throw new Error(`Line ${line}, Column ${col} -- Expected ${expected}, Got: ${got}`);\n    }\n\n    private parseMetaStatement(): MetaValue {\n        // Start at '@'\n\n        // Next Token\n        this.nextToken();\n        let tkn = this.current;\n\n        // Check to see if it is an idenitifier\n        if (tkn.type !== TokenType.Identifier) {\n            this.logError('Identifier', tkn.value);\n        }\n\n        // Get Meta Name value\n        const name = tkn.value;\n\n        // Next Token\n        this.nextToken();\n        tkn = this.current;\n\n        // Check to see if it is a number\n        if (tkn.type !== TokenType.Number) {\n            this.logError('Identifier', tkn.value);\n        }\n\n        // Get Meta Value value\n        const value = tkn.value;\n\n        return { name, value };\n    }\n\n    private parseObjectStatement(): ObjectValue {\n        let tkn = this.current;\n        // Start at the class\n        const clss = tkn.value as ObjectClassTypes;\n\n        // Next Token\n        this.nextToken();\n        tkn = this.current;\n\n        // Check to make sure it is a DoubleColon '::'\n        if (tkn.type !== TokenType.DoubleColon) {\n            const [line, col] = this.lexer.getCursor();\n            throw new Error(`No double colon at ${line}, ${col} -- ${this.current} instead`);\n        }\n\n        // Next Token\n        this.nextToken();\n        tkn = this.current;\n\n        // Check to see if it is an identifier of an object type e.g. 'sphere'\n        if (tkn.type !== TokenType.Identifier) {\n            this.logError('Object Type', tkn.value);\n        }\n\n        // Get Type value\n        const type = tkn.value as ObjectTypes | LightTypes;\n\n        // Next Token\n        this.nextToken();\n        tkn = this.current;\n\n        // Check to see if it is an identifier of the name of the object\n        if (tkn.type !== TokenType.Identifier) {\n            this.logError('Identifier', tkn.value);\n        }\n\n        // Get Name value\n        const name = tkn.value;\n\n        // Parse specific type to get values\n        const values = this.parseBraceStatement();\n        return {\n            class: clss,\n            type,\n            name,\n            values,\n        }\n    }\n\n    private parseBraceStatement(): Array<MetaValue> {\n        // Next Token to get Curly Brace\n        this.nextToken();\n        let tkn = this.current;\n\n        // Check the L Curly Brace\n        if (tkn.type !== TokenType.LCurlyBrace) {\n            this.logError('{', tkn.value);\n        }\n\n        // Next Token\n        this.nextToken();\n        tkn = this.current;\n\n        const attributes: MetaValue[] = [];\n\n        // Parse Attribute line\n        while (this.current.type !== TokenType.RCurlyBrace) {\n            attributes.push(this.parseObjectAttribute());\n        }\n\n        return attributes;\n    }\n\n    private parseObjectAttribute(): MetaValue {\n        let tkn = this.current;\n\n        // Check to see if we have an identifier\n        if (tkn.type !== TokenType.Identifier) {\n            this.logError('Identifier', tkn.value);\n        }\n\n        // Get Value Name\n        const name = tkn.value;\n\n        // Next Token\n        this.nextToken();\n        tkn = this.current;\n\n        // Check to see if we have a colon\n        if (tkn.type !== TokenType.Colon) {\n            this.logError(':', tkn.value);\n        }\n\n        // Next Tokne\n        this.nextToken();\n        tkn = this.current;\n\n        // Check if it is a curly brace or a number\n        if (tkn.type !== TokenType.LCurlyBrace && tkn.type !== TokenType.Number) {\n            this.logError('Vector or Number', tkn.value);\n        }\n\n        // Get the Vector or Number value\n        let value: string | VectorValue = '';\n        if (tkn.type === TokenType.LCurlyBrace) {\n            value = this.parseVector();\n        } else {\n            value = tkn.value;\n        }\n\n        // Consume the semicolon\n        this.nextToken();\n        tkn = this.current;\n\n        if (tkn.type !== TokenType.Semicolon) {\n            this.logError(';', tkn.value);\n        }\n\n        this.nextToken();\n\n        return { name, value };\n    }\n\n    private parseVector(): VectorValue {\n        this.nextToken();\n        let tkn = this.current;\n        let v: VectorValue = ['0', '0', '0'];\n\n        // Number - Comma - Number - Comma - Number\n        if (tkn.type !== TokenType.Number) {\n            this.logError('Number', tkn.value);\n        }\n        v[0] = tkn.value;\n        this.nextToken();\n        tkn = this.current;\n\n        if (tkn.type !== TokenType.Comma) {\n            this.logError('Comma', tkn.value);\n        }\n        this.nextToken();\n        tkn = this.current;\n\n        if (tkn.type !== TokenType.Number) {\n            this.logError('Number', tkn.value);\n        }\n        v[1] = tkn.value;\n        this.nextToken();\n        tkn = this.current;\n\n        if (tkn.type !== TokenType.Comma) {\n            this.logError('Comma', tkn.value);\n        }\n        this.nextToken();\n        tkn = this.current;\n\n        if (tkn.type !== TokenType.Number) {\n            this.logError('Number', tkn.value);\n        }\n        v[2] = tkn.value;\n        this.nextToken();\n        tkn = this.current;\n\n        if (tkn.type !== TokenType.RCurlyBrace) {\n            this.logError('}', tkn.value);\n        }\n\n        return v;\n    }\n}","import { Color } from \"../../raytracer/core/Color\";\nimport { Scene } from \"../../raytracer/core/Scene\";\nimport { Light } from \"../../raytracer/lights/Light\";\nimport { LightType } from \"../../raytracer/lights/LightType\";\nimport { Vector } from \"../../raytracer/math/Vector\";\nimport { RenderableObject } from \"../../raytracer/objects/RenderableObject\";\nimport { Sphere } from \"../../raytracer/objects/Sphere\";\nimport { Parser } from \"../parser/Parser\";\nimport { MetaValue, ObjectValue, Tree, VectorValue } from \"../parser/Types\";\n\nexport class Assembler {\n    private tree: Tree;\n\n    constructor(input: string) {\n        const p = new Parser(input);\n        this.tree = p.parse();\n    }\n\n    public assemble(): Scene {\n        // Meta\n        const width = parseInt(this.getMetaValue('screen_width').value as string);\n        const height = parseInt(this.getMetaValue('screen_height').value as string);\n\n        // Scene\n        const scene = new Scene([width, height]);\n\n        // Objects\n        this.tree.objects.forEach(o => {\n            const obj = this.createObject(o);\n            scene.addObject(obj);\n        })\n\n        // Lights\n        this.tree.lights.forEach(l => {\n            const light = this.createLight(l);\n            scene.addLight(light);\n        })\n\n        return scene;\n    }\n\n    private getMetaValue(name: string): MetaValue {\n        const width = this.tree.meta.filter(m => m.name === name);\n        const meta = width.length > 0 ? width[0] : { name, value: '' };\n        return meta;\n    }\n\n    private createObject(obj: ObjectValue): RenderableObject {\n        let c = this.getValue(obj.values, 'center', ['0', '0', '0']);\n        if (!(c instanceof Array)) c = ['0', '0', '0'];\n        const center = new Vector(parseFloat(c[0]), parseFloat(c[1]), parseFloat(c[2]));\n\n        let co = this.getValue(obj.values, 'color', ['0', '0', '0']);\n        if (!(co instanceof Array)) co = ['0', '0', '0'];\n        const color = new Color(parseFloat(co[0]), parseFloat(co[1]), parseFloat(co[2]));\n\n        let spec = this.getValue(obj.values, 'specular', '-1');\n        if (spec instanceof Array) spec = '0';\n        const specular = parseFloat(spec);\n\n        let ref = this.getValue(obj.values, 'reflective', '0');\n        if (ref instanceof Array) ref = '0';\n        const reflective = parseFloat(ref);\n\n        let trans = this.getValue(obj.values, 'transparency', '0');\n        if (trans instanceof Array) trans = '0';\n        const transparency = parseFloat(trans);\n\n\n        switch (obj.type) {\n            case 'sphere': {\n                let r = this.getValue(obj.values, 'radius', '1');\n                if (r instanceof Array) r = r[0] || '1';\n                const radius = parseFloat(r);\n                return new Sphere(center, radius, color, specular, reflective, transparency);\n            }\n\n            default: {\n                throw new Error(`Undefined Renderable: ${obj.type}`);\n            }\n        }\n    }\n\n    private getValue(values: MetaValue[], name: string, def: string | VectorValue): string | VectorValue {\n        let v = values.filter(val => val.name === name);\n        if (v.length > 0) {\n            return v[0].value;\n        }\n        return def;\n    }\n\n    private createLight(l: ObjectValue): Light {\n        let int = this.getValue(l.values, 'intensity', ['0', '0', '0']);\n        if (!(int instanceof Array)) int = ['0', '0', '0'];\n        const intensity = new Vector(parseFloat(int[0]), parseFloat(int[1]), parseFloat(int[2]));\n\n        switch (l.type) {\n            case 'ambient': {\n                return new Light(LightType.Ambient, intensity);\n            }\n\n            case 'directional': {\n                let dir = this.getValue(l.values, 'direction', ['0', '0', '0']);\n                if (!(dir instanceof Array)) dir = ['0', '0', '0'];\n                const direction = new Vector(parseFloat(dir[0]), parseFloat(dir[1]), parseFloat(dir[2]));\n                return new Light(LightType.Directional, intensity, direction);\n            }\n\n            case 'point': {\n                let pos = this.getValue(l.values, 'position', ['0', '0', '0']);\n                if (!(pos instanceof Array)) pos = ['0', '0', '0'];\n                const position = new Vector(parseFloat(pos[0]), parseFloat(pos[1]), parseFloat(pos[2]));\n                return new Light(LightType.Point, intensity, position);\n            }\n\n            default: {\n                throw new Error(`Undefined Renderable: ${l.type}`);\n            }\n        }\n    }\n}\n","import { Assembler } from \"./tracescript\";\n\nconst editor = document.getElementById('editor') as HTMLInputElement;\nconst submit = document.getElementById('submit');\nconst cvs = document.getElementById('canvas') as HTMLCanvasElement;\n\n\nsubmit?.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const a = new Assembler(editor.value);\n  const scene = a.assemble();\n\n  scene.render(2);\n  scene.draw();\n  cvs.innerHTML = '';\n  scene.setParent(cvs as HTMLElement);\n})"],"names":["$b845af3875f7166992935f5478fffa54$export$Vector","values","constructor","v1","v2","v3","this","getValues","magnitude","Math","sqrt","dot","v","_v1","_v2","_v3","multiplyScalar","scalar","divideScalar","addVector","minusVector","plusEquals","$7dc1c0f44be5f16aee626b68d207a2c9$export$Color","red","green","blue","super","value","fromValue","r","g","b","converValue","clamp","fromVector","multiplyVector","_r","_g","_b","blend","_v","addColor","color","minusColor","$22c7d2f74dd7d2fbda79d3e8cc2c47cb$export$Matrix","rows","getRow","i","getAt","x","y","index","multiplyMatrix","n","m","z","rotateX","c","cos","s","sin","rotateY","rotateZ","$3b6e7c2c800cb905289b78dc10e7edb0$export$Camera","position","viewport","dimensions","distance","rotation","rotate","rX","rY","rZ","rotX","rotY","rotZ","$257ceb51ee1ab3fb71e7f6c354dc914c$export$LightType","LightType","b64","tmp","lens","$85dec55e285048dad15d196cf8c6124b$var$getLens","validLen","placeHoldersLen","arr","$85dec55e285048dad15d196cf8c6124b$var$Arr","$85dec55e285048dad15d196cf8c6124b$var$_byteLength","curByte","len","$85dec55e285048dad15d196cf8c6124b$var$revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","$85dec55e285048dad15d196cf8c6124b$var$encodeChunk","$85dec55e285048dad15d196cf8c6124b$var$lookup","join","Uint8Array","Array","$85dec55e285048dad15d196cf8c6124b$var$code","$85dec55e285048dad15d196cf8c6124b$var$i","$85dec55e285048dad15d196cf8c6124b$var$len","Error","indexOf","start","end","num","output","buffer","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","rt","abs","isNaN","floor","log","LN2","$23576705ead00e0ea0e01617916685f6$var$customInspectSymbol","Symbol","$23576705ead00e0ea0e01617916685f6$var$Buffer","$23576705ead00e0ea0e01617916685f6$var$K_MAX_LENGTH","$23576705ead00e0ea0e01617916685f6$var$createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","$23576705ead00e0ea0e01617916685f6$var$allocUnsafe","$23576705ead00e0ea0e01617916685f6$var$from","string","encoding","isEncoding","$23576705ead00e0ea0e01617916685f6$var$byteLength","actual","write","slice","$23576705ead00e0ea0e01617916685f6$var$fromString","ArrayBuffer","isView","arrayView","$23576705ead00e0ea0e01617916685f6$var$isInstance","copy","$23576705ead00e0ea0e01617916685f6$var$fromArrayBuffer","byteOffset","byteLength","$23576705ead00e0ea0e01617916685f6$var$fromArrayLike","$23576705ead00e0ea0e01617916685f6$var$fromArrayView","SharedArrayBuffer","valueOf","from","obj","isBuffer","$23576705ead00e0ea0e01617916685f6$var$checked","undefined","$23576705ead00e0ea0e01617916685f6$var$numberIsNaN","type","isArray","data","$23576705ead00e0ea0e01617916685f6$var$fromObject","toPrimitive","$23576705ead00e0ea0e01617916685f6$var$assertSize","size","array","toString","mustMatch","arguments","loweredCase","$23576705ead00e0ea0e01617916685f6$var$utf8ToBytes","$23576705ead00e0ea0e01617916685f6$var$base64ToBytes","toLowerCase","$23576705ead00e0ea0e01617916685f6$var$slowToString","$23576705ead00e0ea0e01617916685f6$var$hexSlice","$23576705ead00e0ea0e01617916685f6$var$utf8Slice","$23576705ead00e0ea0e01617916685f6$var$asciiSlice","$23576705ead00e0ea0e01617916685f6$var$latin1Slice","$23576705ead00e0ea0e01617916685f6$var$base64Slice","$23576705ead00e0ea0e01617916685f6$var$utf16leSlice","$23576705ead00e0ea0e01617916685f6$var$swap","$23576705ead00e0ea0e01617916685f6$var$bidirectionalIndexOf","val","dir","$23576705ead00e0ea0e01617916685f6$var$arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","$23576705ead00e0ea0e01617916685f6$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$23576705ead00e0ea0e01617916685f6$var$utf8Write","$23576705ead00e0ea0e01617916685f6$var$blitBuffer","$23576705ead00e0ea0e01617916685f6$var$asciiWrite","str","byteArray","$23576705ead00e0ea0e01617916685f6$var$asciiToBytes","$23576705ead00e0ea0e01617916685f6$var$base64Write","$23576705ead00e0ea0e01617916685f6$var$ucs2Write","units","hi","lo","$23576705ead00e0ea0e01617916685f6$var$utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$23576705ead00e0ea0e01617916685f6$var$MAX_ARGUMENTS_LENGTH","fromCharCode","apply","$23576705ead00e0ea0e01617916685f6$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$23576705ead00e0ea0e01617916685f6$var$typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","$23576705ead00e0ea0e01617916685f6$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$23576705ead00e0ea0e01617916685f6$var$hexSliceLookupTable","bytes","$23576705ead00e0ea0e01617916685f6$var$checkOffset","ext","$23576705ead00e0ea0e01617916685f6$var$checkInt","max","$23576705ead00e0ea0e01617916685f6$var$checkIEEE754","$23576705ead00e0ea0e01617916685f6$var$writeFloat","littleEndian","noAssert","$23576705ead00e0ea0e01617916685f6$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$23576705ead00e0ea0e01617916685f6$var$INVALID_BASE64_RE","leadSurrogate","split","$23576705ead00e0ea0e01617916685f6$var$base64clean","src","dst","name","alphabet","table","i16","$5e2a3d751a7ef6750552987a9dbdd9ab$export$Canvas","width","height","pixels","putPixel","_x","_y","setDimensions","$73b5bac566c5af0dacd14bef9c0cebc2$export$Renderer","cvs","draw","toPng","$73b5bac566c5af0dacd14bef9c0cebc2$var$Buffer","$5c920e8734e7497cdbf4d1863276aea1$export$BrowserRenderer","$canvas","document","createElement","setAttribute","ctx","getContext","setParent","parent","appendChild","screenData","imageData","getImageData","requestAnimationFrame","putImageData","base64Data","toDataURL","$5c920e8734e7497cdbf4d1863276aea1$var$Buffer","$273254e474e8108306e3e6257aece6de$export$NodeRenderer","$273254e474e8108306e3e6257aece6de$var$Buffer","$acbbc5880adeb25ff8b1b84afdbc7b89$export$Ray","direction","pointAt","reflect","$68702932dabef9a403cd42bb5014b36d$var$WHITE","$68702932dabef9a403cd42bb5014b36d$var$BLACK","$68702932dabef9a403cd42bb5014b36d$export$Scene","objects","lights","resolution","renderer","window","ratio","getRatio","camera","render","reduceBy","w","h","cWidth","cHeight","vWidth","vHeight","cY","cX","vX","vY","origin","renderedColor","traceRay","rotateCamera","moveCamera","getSize","addObject","addLight","light","rDepth","hit","object","getClosestHit","inverseViewport","intersection","normal","getNormal","lighting","computeLighting","specular","reflective","reflectedRay","ray","reflectedColor","transparency","transparentColor","closestT","closestObj","tangents","intersect","t","Ambient","intensity","lDirection","getLightDirection","tmax","Point","_","shadowObj","diffuseLighting","calculateDiffuseLighting","specularLighting","calculateSpecularLighting","Directional","nDotL","lightMod","reflected","rDotDist","$7b94d4c02bfe218b2c50f0c414df63b3$export$Light","$15b68678d48de290f16bf9a03e3c0762$export$RenderableObjectType","RenderableObjectType","$84ffc8bd5a90ee201e66461e6089b551$export$Sphere","Empty","center","moveTo","radius","Sphere","cO","discriminant","$c36a75f2be9389eafe66951e4bb2f1c8$export$TokenType","TokenType","$82906420d954e6aecac83a500e496f9d$var$newToken","$82906420d954e6aecac83a500e496f9d$var$newErrorToken","line","column","message","$82906420d954e6aecac83a500e496f9d$var$isNumber","re","RegExp","match","$82906420d954e6aecac83a500e496f9d$var$isAlpha","$82906420d954e6aecac83a500e496f9d$var$isIdentifier","$82906420d954e6aecac83a500e496f9d$var$isAlphaNumeric","$82906420d954e6aecac83a500e496f9d$var$isWhitespace","$82906420d954e6aecac83a500e496f9d$var$isNewLine","$82906420d954e6aecac83a500e496f9d$export$Lexer","tokens","current","cursor","input","createTokens","End","whitespace","parse","nextToken","getCursor","cur","At","Comma","Semicolon","tkn","DoubleColon","Colon","LCurlyBrace","RCurlyBrace","readNumber","fullNum","f","$82906420d954e6aecac83a500e496f9d$var$isFloat","ident","readIdentifier","Identifier","peak","$362823ab2ec0debbd5b91501c4c92726$export$Parser","Start","lexer","tree","meta","parseMetaStatement","parseObjectStatement","class","col","JSON","stringify","logError","expected","got","clss","parseBraceStatement","attributes","parseObjectAttribute","parseVector","$bc21d978ba078ce00e15631cfa297ef6$export$Assembler","p","assemble","getMetaValue","scene","forEach","o","createObject","l","createLight","filter","getValue","parseFloat","co","spec","ref","trans","def","int","$fe6805ae6a1acc57369ff96015183e28$var$editor","getElementById","$fe6805ae6a1acc57369ff96015183e28$var$submit","$fe6805ae6a1acc57369ff96015183e28$var$cvs","addEventListener","preventDefault","innerHTML"],"version":3,"file":"index.18b1aa26.js.map"}